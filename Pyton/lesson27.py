# lesson27
# Python scope resolution


# n პითონში, მასშტაბის გარჩევადობა ეხება პროცესს, რომელსაც Python იყენებს ცვლადების ხილვადობისა და სიცოცხლის ხანგრძლივობის დასადგენად. ის განსაზღვრავს სად არის ხელმისაწვდომი ცვლადი ან ობიექტი თქვენს კოდში. პითონი განსაზღვრავს ფარგლებს LEGB წესის გამოყენებით: ლოკალური, თანდართული, გლობალური და ჩაშენებული.

# LEGB წესი
# პითონი ეძებს ცვლადებს შემდეგი თანმიმდევრობით:

# ადგილობრივი (L):

# ყველაზე შიდა სფერო, რომელიც ეხება მიმდინარე ფუნქციას ან მეთოდს.
# თუ ცვლადი მინიჭებულია ფუნქციის შიგნით, ის მიეკუთვნება ამ ფუნქციის
#  ლოკალურ სფეროს.
# დანართი (E):

# ეხება ნებისმიერ თანდართულ ფუნქციას ან მეთოდის ფარგლებს, ანუ 
# ფუნქციების ფარგლებს, რომლებიც შეიცავს მიმდინარე ფუნქციას (ბუდე 
# ფუნქციები).
# ეს დიაპაზონი რელევანტურია ჩადგმული ფუნქციებისთვის, სადაც შიდა 
# ფუნქციას შეუძლია ცვლადებზე წვდომა მისი თანდართული ფუნქციებიდან.
# გლობალური (G):

# გლობალური ფარგლები არის სკრიპტის ან მოდულის უმაღლესი დონის სფერო.
# იგი მოიცავს ცვლადებს, რომლებიც განსაზღვრულია ნებისმიერი ფუნქციის ან 
# კლასის გარეთ და ხელმისაწვდომია მთელ მოდულში.
# ჩამონტაჟებული (B):

# ყველაზე გარე არე არის ჩაშენებული სკოპი, რომელიც შეიცავს ყველა ჩაშენებულ
#  ფუნქციას, გამონაკლისს და სხვა ობიექტებს, რომლებიც ხელმისაწვდომია 
# Python-ში (როგორიცაა print(), len() და ა.შ.).
# Python მოძებნის ამ სფეროებს ლოკალური → თანდართული → გლობალური →
#  ჩაშენებული (LEGB) თანმიმდევრობით ცვლადის მოსაძებნად.


# Local (L):

# Global (G):

# Built-in (B):




#  Enclosing Scope
x = 10 
def outer():
    x = 20  
    
    def inner():
        print(x) 
    
    inner()

outer()


#  Global Scope

x = 10  

def my_function():
    print(x)  
    
my_function()




#  Built-in Scope

def my_function():
    print(len)  

my_function()