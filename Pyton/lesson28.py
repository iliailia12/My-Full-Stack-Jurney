# lesson28
# if __name__ == '__main__' 


# Python-ში, თუ __name__ == '__main__' არის ჩვეულებრივი კონსტრუქცია,
# რომელიც გამოიყენება იმის შესამოწმებლად, არის თუ არა პითონის ფაილი 
# სკრიპტის სახით გაშვებული თუ იმპორტირებული მოდულის სახით. ის საშუალებას
# გაძლევთ პირობითად შეასრულოთ კოდის
# გარკვეული ბლოკები მხოლოდ მაშინ, როდესაც ფაილი შესრულებულია პირდაპირ
# და არა სხვა სკრიპტში იმპორტის დროს.

# რა არის __name__?
# სპეციალური ცვლადი __name__ ავტომატურად დაყენებულია Python-ის მიერ 
# თითოეული მოდულისთვის (.py ფაილი). მისი ღირებულება დამოკიდებულია 
# იმაზე, თუ როგორ ხდება ფაილის შესრულება.

# როდესაც ფაილი გაშვებულია პირდაპირ სკრიპტის სახით 
# (მაგ., python myscript.py), Python აყენებს __name__-ს "__main__".
# როდესაც ფაილი იმპორტირებულია მოდულის სახით სხვა სკრიპტში 
# (მაგ., იმპორტი mymodule), Python აყენებს __name__-ს მოდულის 
# სახელზე (მაგ., 'mymodule').
# if __name__ == '__main__' ბლოკი
# if __name__ == '__main__' ბლოკი ამოწმებს სკრიპტის პირდაპირ 
# გაშვებას (არ არის იმპორტირებული). თუ სკრიპტი უშუალოდ
# შესრულებულია, კოდი if ბლოკში გაშვებული იქნება. თუ სკრიპტი 
# იმპორტირებულია მოდულის სახით, if ბლოკის შიგნით არსებული 
# კოდი იგნორირებულია.


# Basic Usage

def greet():
    print("Hello from the greet function!")

if __name__ == '__main__':
    greet()  


#  Using __name__ in Modules
def say_hello():
    print("Hello from module!")

if __name__ == '__main__':
    print("This code runs only if the module is executed directly.")


