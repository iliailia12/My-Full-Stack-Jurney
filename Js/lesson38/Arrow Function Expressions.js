// JavaScript-ის ისრის ფუნქციების (Arrow Function Expressions) სინტაქსი არის მოკლე და თანამედროვე გზა ფუნქციების განსასაზღვრად. ისრიანი ფუნქციები დაწერილია => სიმბოლოთი და განსაკუთრებით გამოსადეგია, როცა გჭირდებათ მოკლე და სწრაფი ოპერაციები.

// მაგალითი: მარტივი ისრიანი ფუნქცია
//1
const add = (a, b) => a + b;
console.log(add(5, 7)); 
 

// მაგალითი: პარამეტრები და კოდი
// ერთი პარამეტრი: როცა ფუნქცია მხოლოდ ერთ პარამეტრს იღებს, შეგიძლიათ პარენტეზების გარეშე დაწეროთ:

 
const square = x => x * x;
console.log(square(3)); 
 
// მრავალი პარამეტრი: თუ ფუნქციას ორი ან მეტი პარამეტრი აქვს, აუცილებელია პარენტეზების გამოყენება:

 
const multiply = (a, b) => a * b;
console.log(multiply(4, 5)); 
 
// მრავალი სტრიქონი: როცა კოდი შედგება რამდენიმე ოპერაციისგან, საჭიროა ფიგურული ფრჩხილების {} და return:

 

 
const calculateArea = (length, width) => {
  const area = length * width;
  return area;
};
console.log(calculateArea(5, 10)); 
 

// ისრიანი ფუნქცია არ ინახავს საკუთარი this მნიშვნელობას (ეს მნიშვნელობა ყოველთვის განსაზღვრულია გარეგანი კონტექსტით).

// ამ ტიპის ფუნქციები ხშირია ES6-ის თანამედროვე კოდებში.